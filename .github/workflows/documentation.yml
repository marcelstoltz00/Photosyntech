name: Generate and Deploy Documentation

permissions:
  contents: read      # Read permission for checkout
  pages: write       # Permission to write to GitHub Pages
  id-token: write    # Permission to use OIDC token for deployment

on:
  push:
    branches: [ main, master, devBranch, TUI , devDoc]
  workflow_dispatch:

jobs:
  # ----------------------------------------------------
  # 1. BUILD JOB: Generate the Doxygen HTML files
  # ----------------------------------------------------
  build-documentation:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install Doxygen and Graphviz
      run: sudo apt-get update && sudo apt-get install -y doxygen graphviz

    - name: Create output directory
      run: mkdir -p docs/doxygen/html

    - name: Run Doxygen
      run: doxygen Doxyfile # This runs Doxygen and creates the HTML files

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        # This path MUST match the 'OUTPUT_DIRECTORY' + 'HTML_OUTPUT'
        # from your Doxyfile.
        #
        # Example: if Doxyfile has:
        # OUTPUT_DIRECTORY = docs
        # HTML_OUTPUT      = doxygen/html
        # Then the path here should be: "docs/doxygen/html"
        path: 'docs/doxygen/html' # <--- DOUBLE-CHECK THIS PATH

  # ----------------------------------------------------
  # 2. DEPLOY JOB: Deploy the artifact to Pages
  # ----------------------------------------------------
  deploy:
    # This job must wait for the build job to finish
    needs: build-documentation

    # Use the same environment as your first working log
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # The action from your working log